<Window x:Class="MiniRadiant.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MiniRadiant"
        mc:Ignorable="d"
        d:DataContext="{StaticResource ResourceKey=ExampleData}"
        Title="MiniRadiant" Height="450" Width="1200">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition></ColumnDefinition>
            <ColumnDefinition Width="200"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <DockPanel Grid.Column="0">
            <TabControl DockPanel.Dock="Top">
                <TabItem Header="Colors">
                    <ListView x:Name="colorsList" ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Auto" SelectionChanged="colorsList_SelectionChanged" d:ItemsSource="{Binding Path=LightColors}">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Grid Width="800">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="50"></ColumnDefinition>
                                        <ColumnDefinition></ColumnDefinition>
                                        <ColumnDefinition></ColumnDefinition>
                                        <ColumnDefinition></ColumnDefinition>
                                        <ColumnDefinition Width="200"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition></RowDefinition>
                                        <RowDefinition></RowDefinition>
                                    </Grid.RowDefinitions>

                                    <Rectangle Grid.RowSpan="2" Grid.Row="0" Grid.Column="0" Width="50" Height="50" Fill="{Binding WPFColor,Mode=OneWay}"></Rectangle>
                                    <TextBox MinWidth="50" Grid.Column="1" IsReadOnly="True" Text="{Binding ColorValues,Mode=OneWay}"></TextBox>
                                    <WrapPanel Grid.Column="1" Grid.Row="1" >
                                        <Label>Use count: </Label>
                                        <TextBox MinWidth="50" IsReadOnly="True" Text="{Binding Count}"></TextBox>
                                    </WrapPanel>
                                    <WrapPanel Grid.Column="2" Grid.Row="0" >
                                        <Label>Set deviance: </Label>
                                        <TextBox MinWidth="50" Text="{Binding Deviance}"></TextBox>
                                    </WrapPanel>
                                    <WrapPanel Grid.Column="2" Grid.Row="1" >
                                        <Label>Set samples: </Label>
                                        <TextBox MinWidth="50" Text="{Binding Samples}"></TextBox>
                                    </WrapPanel>
                                    <WrapPanel Grid.Column="3" Grid.Row="0" >
                                        <Label>Modify intensity: </Label>
                                        <TextBox MinWidth="50" Text="{Binding Intensity}"></TextBox>
                                    </WrapPanel>
                                    <WrapPanel Grid.Column="3" Grid.Row="1" >
                                        <CheckBox IsChecked="{Binding OverrideDevianceSamples}">Override deviance/samples</CheckBox>
                                    </WrapPanel>
                                    <WrapPanel Grid.Column="4" Grid.Row="0" >
                                        <Label>New RGB?</Label>
                                        <TextBox MinWidth="15" Text="{Binding OverrideRed}"></TextBox>
                                        <TextBox MinWidth="15" Text="{Binding OverrideGreen}"></TextBox>
                                        <TextBox MinWidth="15" Text="{Binding OverrideBlue}"></TextBox>
                                    </WrapPanel>
                                    <WrapPanel Grid.Column="4" Grid.Row="1" >
                                        <CheckBox IsChecked="{Binding OverrideColor}">Override color</CheckBox>
                                    </WrapPanel>
                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </TabItem>
                <TabItem Header="Angles">
                    <StackPanel x:Name="anglesPanel">
                        <Label>Replace the following shader/texture:</Label>
                        <TextBox Text="{Binding origTextureName}"></TextBox>
                        <Label>with the following shader/texture:</Label>
                        <TextBox Text="{Binding replaceTextureName}"></TextBox>
                        
                        <Label>if the surface angle is above</Label>
                        <TextBox Text="{Binding minAngle}"></TextBox>
                        <Label>and below</Label>
                        <TextBox Text="{Binding maxAngle}"></TextBox>
                        
                    </StackPanel>
                </TabItem>
            </TabControl>
            
            
        </DockPanel>
        <StackPanel Grid.Column="1">
            <Button x:Name="loadMapBtn" Click="loadMapBtn_Click">Load map</Button>
            <Button x:Name="saveMapBtn" Click="saveMapBtn_Click">Save processed map</Button>
            <DockPanel MinHeight="200" x:Name="miniMapContainer" LastChildFill="True">
                <Image x:Name="miniMap" Stretch="Fill" DockPanel.Dock="Left" VerticalAlignment="Center"></Image>
            </DockPanel>
            <Button x:Name="refreshPreviewBtn" Click="refreshPreviewBtn_Click">Refresh preview</Button>
            <CheckBox x:Name="drawAllLightsCheck" IsChecked="True" Click="drawAllLightsCheck_Click">Draw all lights</CheckBox>
            <CheckBox x:Name="linearFalloffCheck" IsChecked="False" Click="linearFalloffCheck_Click">Linear Falloff</CheckBox>
            <CheckBox x:Name="saturatedClipCheck" IsChecked="True" Click="saturatedClipCheck_Click">Saturated Clipping</CheckBox>
            <Slider x:Name="exposureSlider" Minimum="-10" Maximum="10" Value="0" IsSnapToTickEnabled="True" TickFrequency="1" TickPlacement="Both" ValueChanged="exposureSlider_ValueChanged"></Slider>
        </StackPanel>
    </Grid>
</Window>
